name: Docker-node-ec2-CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #output for jobs
    outputs:
      name: ${{steps.ssh-ing.outputs.name}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      - name: ssh-ing
        run: |
          ##REMOVE_TIS
          echo "::set-output name=name::'__HELLO__'"
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            Port $SSH_PORT
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          GIT_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
          GIT_USER: ${{ secrets.GIT_USER_NAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: env-file-transfer
        run: |
          echo $NAME
          echo $ENV > .env
          scp .env staging:node.js-actions-deploy/.env
        env:
          ENV: ${{secrets.ENV}}
          NAME: ${{ needs.ssh-ing.outputs.name }}

      - name: stop-docker
        continue-on-error: true
        run: ssh staging 'docker stop node-ec2-docker && docker rm node-ec2-docker'
        
      - name: clone-repo-docker-build-deploy
        run: |
          ssh staging '
            ## GET INTO THE REPO
            cd ~/node.js-actions-deploy &&
            git checkout main &&
            git fetch --all &&
            git reset --hard origin/main &&
            git pull origin main &&
            docker build -t node-ec2-docker . &&
            docker run --name node-ec2-docker -d -p 3006:3006 node-ec2-docker:latest       
          '
