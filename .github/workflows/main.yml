name: Docker-node-ec2-CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      - name: ssh-ing
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            Port $SSH_PORT
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          environment: ${{ secrets.ENV }}
          GIT_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
          GIT_USER: ${{ secrets.GIT_USER_NAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: clone-repo
        run: |
          ssh staging 'git config --global user.name $GIT_USER && git config --global user.email $GIT_EMAIL'
          ssh staging 'echo "hello"'
        
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
